find.packages("devtools")
find.package("devtools")
install.packages("devtools")
library (devtools)
find_rtools()
find.package("devtools")
install.packages("KernSmooth")
library (KernSmooth)
find.package("devtools")
find.package("devtools")
setwd("~/")
find.package ("devtools")
getwd()
read.csv("mydata.csv")
install.packages("data.table")
library(data.table)
install.packages("XML")
library(XML)
install.packages("xlsx")
library("XML", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
ls
getwd
getwd()
x = rnorm(50)
x
max(x)
min(x)
y = x + rnorm(50)
min(y)
max(y)
gen = gl(2, 25, labels = c("male", "female"))
gen
str(gen)
?gl
gend = gl(2, 25, labels = c("male", "female"))
rm(gen)
plot(x, y)
plot(y, x)
plot(x, y)
par(mfrow = c(1, 2))
plot(x, y)
plot(y, x)
par(mfrow = c(1, 2))
plot(y, x)
plot(y, x)
plot(y, x)
plot(y, x)
plot(x, y)
plot (x, y, type = "n")
?points
plot (x, y, type = "n")
points(x[gend == "male"], y[gend == "male"], col = "blue")
points(x[gend = "female"], y[gend == "female"]], col = "pink")
points(x[gend = "female"], y[gend == "female"], col = "pink")
points(x[gend == "female"], y[gend == "female"], col = "pink")
points(x[gend == "male"], y[gend == "male"], col = "light blue")
gend = gl(2, 25, labels = c("boy", "girl"))
plot (x, y, type = "n")
points(x[gend == "boy"], y[gend == "boy"], col = "light blue")
points(x[gend == "girl"], y[gend == "girl"], col = "pink")
plot (x, y, type = "n")
points(x[gend == "boy"], y[gend == "boy"], col = "light blue")
points(x[gend == "girl"], y[gend == "girl"], col = "pink")
legend("bottomleft", pch=1, col = c("light blue", "pink"),
legend = c("boy", "girl"))
legend("bottomright", pch=1, col = c("light blue", "pink"),
legend = c("boy", "girl"))
?devices
?Devices
library(datasets)
with(faithful, plot(eruptions, waiting))  ## Create plot on screen device
title(main = "Old Faithful Geyser data")  ## Add a main title
dev.copy(png, file = "geyserplot.png")  ## Copy my plot to a PNG file
dev.off()  ## Don't forget to close the PNG device!
getwd()
setwd("/Users/Cindy/Data_Science/datasciencecoursera")
list.files
list.files()
getwd()
setwd("/Users/Cindy/Data_Science/datasciencecoursera/ExplorData_repo/ExData_Plotting1")
ls
ls()
list.files
list.files()
setwd("/Users/Cindy/Data_Science/datasciencecoursera/ExplorData_repo"
"/ExData_Plotting1")
wrkdir <- "/Users/Cindy/Data_Science/datasciencecoursera/ExplorData_repo/ExData_Plotting1"
setwd(wrkdir)
ls
list.files()
cd
setwd("/Users/Cindy/Data_Science/datasciencecoursera")
setwd(wrkdir)
ls
list.files()
setwd("/Users/Cindy/Data_Science/datasciencecoursera")
list.files()
wrkdir2 <- paste("/Users/Cindy/Data_Science/datasciencecoursera",
"/ExplorData_repo/ExData_Plotting1")
setwd("/Users/Cindy/Data_Science/datasciencecoursera")
list.files()
setwd(wrkdir2)
wrkdir2
wrkdir2 <- paste("/Users/Cindy/Data_Science/datasciencecoursera",
"/ExplorData_repo/ExData_Plotting1", sep="")
wrkdir2
list.files()
setwd(wrkdir2)
list.files()
plotUrl <- paste("https://d396qusza40orc.cloudfront.net",
"/exdata%2Fdata%2Fhousehold_power_consumption.zip", sep="")
plotUrl
download.file(ploturl, destfile="./data/powerconsump.csv", method="curl")
download.file(plotUrl, destfile="./data/powerconsump.csv", method="curl")
list.files()
if (!file.exists("./data")) { dir.create("./data") }
download.file(plotUrl, destfile="./data/powerconsump.csv", method="curl")
dateloaded <- date()
powerdata <- read.csv("./data/powerconsump.csv", sep = ";")
head(powerdata)
powerdata <- read.csv("./data/powerconsump.csv", sep = "\;")
powerdata <- read.csv("./data/powerconsump.csv", sep = "\\;")
powerdata <- read.csv("./data/powerconsump.csv", sep = ";", header=TRUE)
head(powerdata)
rm(wrkdir, wrkdir2)
rm(plants)
rm(mtcars)
cm
rm(flips2)
rm(cm)
rm(flips)
my
class(my)
class(my_pois)
rm(my_pois)
my_matrix <- my
rm(my)
